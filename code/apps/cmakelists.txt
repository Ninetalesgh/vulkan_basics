cmake_minimum_required ( VERSION 3.15.0 )

MACRO ( add_brewing_station_app SUB_APP_NAME )
    file( GLOB_RECURSE SRC_REC     "src/*.cpp" )
    file( GLOB_RECURSE INL_REC     "inl/*.inl" )
    file( GLOB_RECURSE INCLUDE_REC "include/*.h" )

    set( SUB_FILES ${SUB_FILES} ${SRC_REC} )
    set( SUB_FILES ${SUB_FILES} ${INL_REC} )
    set( SUB_FILES ${SUB_FILES} ${INCLUDE_REC} )
    
    add_executable( ${SUB_APP_NAME} ${SUB_FILES} )
    
    set_target_properties( ${SUB_APP_NAME} PROPERTIES FOLDER "apps" )
    
    source_group( TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${SUB_FILES} )
    
    include_directories( "include" )

    message( STATUS "- ${SUB_APP_NAME}" ) 

    if ( ${ARGC} GREATER "1" ) 
        message( STATUS "- - - - - dependencies:" )  
    endif()

    foreach (SUB_DEPENDENCY ${ARGN} )
        add_dependencies( ${SUB_APP_NAME} ${SUB_DEPENDENCY} )
        include_directories( "../${SUB_DEPENDENCY}/include" )
        message( STATUS "- - - - - - - ${SUB_DEPENDENCY}" )
    endforeach()

ENDMACRO()

MACRO ( include_external_brewing_station_managed_app SUB_APP_NAME )
    include_external_msproject( ${SUB_APP_NAME} "${CMAKE_CURRENT_SOURCE_DIR}/${SUB_APP_NAME}.csproj" )
    set_target_properties( ${SUB_APP_NAME} PROPERTIES FOLDER "apps" )

   message( STATUS "- ${SUB_APP_NAME}" )  

ENDMACRO()

MACRO ( add_brewing_station_managed_app SUB_APP_NAME )

ENDMACRO()

###################################################################
###################################################################

message( STATUS "---------------------------------------" )
message( STATUS "APPLICATIONS: ")

#applications
add_subdirectory( brew )

if ( "${BREWING_STATION_TARGET_PLATFORM}" MATCHES "windows" )
    add_subdirectory( cauldron )
    add_subdirectory( windows_playground )
endif()

if ( "${BREWING_STATION_TARGET_PLATFORM}" MATCHES "android" )
    add_subdirectory( android_only_test )
endif()

message( STATUS "---------------------------------------" )